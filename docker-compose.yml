networks:
  client_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.10.0/24

  server_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.11.0/24

services:
  server1:
    working_dir: /app
    build:
      context: ./server
    cap_add:
      - NET_ADMIN
    environment:
      PROTOCOL: tcp
      HOST: 10.0.11.50
      PORT: 10000
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ROUTER_IP: 10.0.11.2
    volumes:
      - server_data:/app
    depends_on:
      - router
    ports:
      - "5555:10000"
    networks:
      server_network:
        ipv4_address: 10.0.11.50

  server2:
    working_dir: /app
    build:
      context: ./server
    cap_add:
      - NET_ADMIN
    environment:
      PROTOCOL: tcp
      HOST: 10.0.11.51
      PORT: 10000
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ROUTER_IP: 10.0.11.2
    volumes:
      - server_data:/app
    depends_on:
      - router
    ports:
      - "5556:10000"
    networks:
      server_network:
        ipv4_address: 10.0.11.51

  server3:
    working_dir: /app
    build:
      context: ./server
    cap_add:
      - NET_ADMIN
    environment:
      PROTOCOL: tcp
      HOST: 10.0.11.52
      PORT: 10000
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ROUTER_IP: 10.0.11.2
    volumes:
      - server_data:/app
    depends_on:
      - router
    ports:
      - "5557:10000"
    networks:
      server_network:
        ipv4_address: 10.0.11.52

  server4:
    working_dir: /app
    build:
      context: ./server
    cap_add:
      - NET_ADMIN
    environment:
      PROTOCOL: tcp
      HOST: 10.0.11.53
      PORT: 10000
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      ROUTER_IP: 10.0.11.2
    volumes:
      - server_data:/app
    depends_on:
      - router
    ports:
      - "5558:10000"
    networks:
      server_network:
        ipv4_address: 10.0.11.53

  router:
    build:
      context: ./router
      dockerfile: router.Dockerfile
    cap_add:
      - NET_ADMIN
    networks:
      client_network:
        ipv4_address: 10.0.10.2
      server_network:
        ipv4_address: 10.0.11.2

  client1:
    working_dir: /app
    build:
      context: ./client
    cap_add:
      - NET_ADMIN
    environment:
      PROTOCOL: tcp
      HOST: 10.0.11.50
      PORT: 10000
      ROUTER_IP: 10.0.10.2
    volumes:
      - client_data:/app
    depends_on:
      - router
    ports:
      - "5560:10000"
    networks:
      - client_network

  client2:
    working_dir: /app
    build:
      context: ./client
    cap_add:
      - NET_ADMIN
    environment:
      PROTOCOL: tcp
      HOST: 10.0.11.51
      PORT: 10000
      ROUTER_IP: 10.0.10.2
    volumes:
      - client_data:/app
    depends_on:
      - router
    ports:
      - "5561:10000"
    networks:
      - client_network

volumes:
  server_data:
  router_data:
  client_data:
